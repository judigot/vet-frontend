/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthProfileIndexImport } from './routes/_auth.profile/index'
import { Route as AuthMypageIndexImport } from './routes/_auth.mypage/index'
import { Route as AuthAppointmentsIndexImport } from './routes/_auth.appointments/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileIndexRoute = AuthProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMypageIndexRoute = AuthMypageIndexImport.update({
  path: '/mypage/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAppointmentsIndexRoute = AuthAppointmentsIndexImport.update({
  path: '/appointments/',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/appointments/': {
      id: '/_auth/appointments/'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof AuthAppointmentsIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/mypage/': {
      id: '/_auth/mypage/'
      path: '/mypage'
      fullPath: '/mypage'
      preLoaderRoute: typeof AuthMypageIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile/': {
      id: '/_auth/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAppointmentsIndexRoute: typeof AuthAppointmentsIndexRoute
  AuthMypageIndexRoute: typeof AuthMypageIndexRoute
  AuthProfileIndexRoute: typeof AuthProfileIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAppointmentsIndexRoute: AuthAppointmentsIndexRoute,
  AuthMypageIndexRoute: AuthMypageIndexRoute,
  AuthProfileIndexRoute: AuthProfileIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/appointments': typeof AuthAppointmentsIndexRoute
  '/mypage': typeof AuthMypageIndexRoute
  '/profile': typeof AuthProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/appointments': typeof AuthAppointmentsIndexRoute
  '/mypage': typeof AuthMypageIndexRoute
  '/profile': typeof AuthProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/appointments/': typeof AuthAppointmentsIndexRoute
  '/_auth/mypage/': typeof AuthMypageIndexRoute
  '/_auth/profile/': typeof AuthProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/appointments' | '/mypage' | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/appointments' | '/mypage' | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/appointments/'
    | '/_auth/mypage/'
    | '/_auth/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/appointments/",
        "/_auth/mypage/",
        "/_auth/profile/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/appointments/": {
      "filePath": "_auth.appointments/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/mypage/": {
      "filePath": "_auth.mypage/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile/": {
      "filePath": "_auth.profile/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
